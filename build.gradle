plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

repositories {
	mavenCentral()
	maven { url = uri("https://jitpack.io") }
}

// QueryDSL 버전 변수 추가
ext {
	querydslVersion = '5.0.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	testImplementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.google.code.gson:gson'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'software.amazon.awssdk:s3:2.25.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	testImplementation 'org.springframework.security:spring-security-test'

	// test
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.mockito:mockito-inline:5.2.0'

	// toss 
	implementation("com.github.toss:toss-cert-java-sdk:0.0.14")
  
	// QueryDSL JPA 모듈 추가
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
	// QueryDSL JPA 어노테이션 프로세서 추가
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
	implementation 'javax.persistence:javax.persistence-api:2.2'
	annotationProcessor 'javax.persistence:javax.persistence-api:2.2'

}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}

// QueryDSL Q타입(메타모델) 소스 디렉토리 추가
sourceSets {
	main {
		java {
			srcDir("$buildDir/generated/sources/annotationProcessor/java/main")
		}
	}
}

// Java 컴파일 시 Annotation Processor 출력 경로 설정
tasks.withType(JavaCompile).configureEach { task ->
	task.options.annotationProcessorGeneratedSourcesDirectory =
			layout.buildDirectory
					.dir("generated/sources/annotationProcessor/java/main")
					.get()
					.asFile
}
